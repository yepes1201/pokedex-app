{"version":3,"sources":["components/Navbar/Navbar.js","helpers/fetch.js","components/PokeGrid/LoadingScreen.js","components/PokeGrid/PokeCard.js","components/PokeGrid/PokeGrid.js","components/Pokedex/PokedexTopBar.js","components/Pokedex/Pokedex.js","components/Pokemon/PokeInfo.js","components/Pokemon/PokemonNotFound.js","components/Pokemon/Pokemon.js","components/Searchbar/Searchbar.js","hooks/useForm.js","App.js","index.js"],"names":["Navbar","className","src","alt","searchPokemon","pokemon","a","lowerCasePoke","toLowerCase","url","fetch","json","data","getPokemons","resp","getPokemonByUrl","LoadingScreen","PokeCard","name","imgUrl","types","id","map","type","charAt","toUpperCase","slice","PokeGrid","links","setPagination","useState","loading","pokemons","totalPokemons","pokeState","setPokeState","useEffect","prevVal","totalPages","promises","results","Promise","all","pokeData","count","current","next","previous","fetchPokemons","sprites","front_default","PokedexTopBar","nextPage","prevPage","actualPage","onClick","Math","round","Pokedex","currentPage","setCurrentPage","pagination","useRef","PokeInfo","base_experience","height","i","PokemonNotFound","Pokemon","pokeName","setSearching","found","setPokemon","poke","Searchbar","initialState","state","setState","target","value","useForm","inputValue","handleInputChange","placeholder","onChange","App","searching","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59ea7475.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <nav className='navbar__container'>\n            <div />\n            <div>\n                <img\n                    className='navbar__logo'\n                    src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1280px-International_Pok%C3%A9mon_logo.svg.png'\n                    alt='pokemon-logo'\n                />\n            </div>\n            <div>\n            </div>\n        </nav>\n    )\n}\n","\n\nexport const searchPokemon = async (pokemon) => {\n\n    const lowerCasePoke = pokemon.toLowerCase();\n\n    let url = `https://pokeapi.co/api/v2/pokemon/${lowerCasePoke}`;\n\n    try{\n        const data = await (await fetch(url)).json();\n        return data;\n    }catch(e){\n        \n    }\n}\n\n\nexport const getPokemons = async (url) => {\n\n    try{\n        const resp = await fetch(url);\n        const data = await resp.json();\n    \n        return data;\n    }catch(e){\n        return e;\n    }\n\n}\n\nexport const getPokemonByUrl = async (url) => {\n    try{\n        const resp = await fetch(url);\n        const data = await resp.json();\n        return data;\n    }catch(e){\n        return e;\n    }\n}","import React from 'react'\n\nexport const LoadingScreen = () => {\n    return (\n        <div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n","import React from 'react'\n\nexport const PokeCard = ({\n    name,\n    imgUrl,\n    id,\n    types\n}) => {\n    return (\n        <div className='pokecard__container'>\n            <div>\n                <img\n                    src={imgUrl}\n                    alt={name}\n                    className='pokecard__img'\n                />\n            </div>\n            <div className='pokecard__info-container'>\n                <h4 className='pokecard__title'>{name}</h4>\n                <div>\n                    {\n                        types.map(types => {\n                            return (\n                                <span key={types.type.name} className='pokecard__types'>{types.type.name.charAt(0).toUpperCase() + types.type.name.slice(1)}</span>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getPokemonByUrl, getPokemons } from '../../helpers/fetch';\nimport { LoadingScreen } from './LoadingScreen';\nimport { PokeCard } from './PokeCard';\n\nexport const PokeGrid = ({url, links, setPagination}) => {\n\n    const [pokeState, setPokeState] = useState({\n        loading: true,\n        pokemons: [],\n        totalPokemons: 0,\n    });\n\n    const {\n        loading,\n        pokemons,\n        totalPokemons\n    } = pokeState;\n\n    useEffect(() => {\n        setPagination(prevVal => {\n            return {\n                ...prevVal,\n                totalPages: totalPokemons/25,\n            }\n        });\n    },[totalPokemons, setPagination])\n\n\n\n    useEffect(() => {\n        setPokeState(prevVal => {\n            return {\n                ...prevVal,\n                loading: true,\n            }\n        })\n\n        const fetchPokemons = async () => {\n            const data = await getPokemons(url);\n            const promises = data.results.map(async (pokemon) => {\n                return await getPokemonByUrl(pokemon.url);\n            });\n\n            const pokeData = await Promise.all(promises);\n\n\n            setPokeState({\n                pokemons: pokeData,\n                totalPokemons: data.count,\n                loading: false,\n            })\n\n            links.current = {\n                next: data.next,\n                previous: data.previous\n            }\n        }\n        fetchPokemons();\n    }, [url, links]);\n\n    return (\n        <div className='pokegrid__container mt-5'>\n            {\n                loading\n                    ? <LoadingScreen />\n                    : pokemons.map(pokemon => {\n                        return (\n                            <PokeCard\n                                key={pokemon.name}\n                                name={pokemon.name}\n                                imgUrl={pokemon.sprites.front_default}\n                                types={pokemon.types}\n                            />\n                        )\n                    })\n            }\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const PokedexTopBar = ({\n    nextPage,\n    prevPage,\n    actualPage,\n    totalPages,\n}) => {\n\n    \n\n    return (\n        <div className='pokedex__container'>\n            <h1 className='pokedex__title'>Pokedex</h1>\n            <div>\n                <button\n                    className='btn'\n                    onClick={prevPage}\n                >\n                    <i className=\"fas fa-chevron-left\"></i>\n                </button>\n\n                <span> {actualPage}/{Math.round(totalPages)} </span>\n\n                <button\n                    className='btn'\n                    onClick={nextPage}\n                >\n                    <i className=\"fas fa-chevron-right\"></i>\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { PokeGrid } from '../PokeGrid/PokeGrid'\nimport { PokedexTopBar } from './PokedexTopBar'\n\nexport const Pokedex = () => {\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [pagination, setPagination] = useState({\n        url: 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=25',\n        totalPages: 0,\n        currentPage: 1\n    });\n\n    const links = useRef({\n        next: null,\n        previous: null\n    });\n\n    const nextPage = () => {\n        if (currentPage < pagination.totalPages) {\n            setCurrentPage(currentPage + 1);\n            setPagination({\n                ...pagination,\n                url: links.current.next,\n                currentPage: currentPage\n            });\n        }\n    }\n\n    const previousPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n            setPagination({\n                ...pagination,\n                url: links.current.previous,\n                currentPage: currentPage,\n            })\n        }\n    }\n\n    return (\n        <div className='container mt-5'>\n            <PokedexTopBar\n                nextPage={nextPage}\n                prevPage={previousPage}\n                totalPages={pagination.totalPages}\n                actualPage={currentPage}\n            />\n            <div className='animate__animated animate__fadeIn'>\n                <PokeGrid\n                    url={pagination.url}\n                    setPagination={setPagination}\n                    links={links}\n                />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const PokeInfo = ({pokemon}) => {\n    return (\n        <div className='container mt-5 animate__animated animate__fadeIn'>\n            <div className='pokemon__container'>\n                <div>\n                    <img\n                        className='pokemon__img'\n                        src={pokemon.sprites.front_default}\n                        alt={pokemon.name}\n                    />\n                </div>\n                <div className='pokemon__info'>\n                    <div className='pokemon__title'>\n                        <h2>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</h2>\n                        <span>#{pokemon.id}</span>\n                    </div>\n                    <div className='pokemon__body mt-2 info-division'>\n                        <p className='pokemon__body-desc'>Base experience: <span>{pokemon.base_experience}</span></p>\n                    </div>\n                    <div className='pokemon__body mt-2 info-division'>\n                        <p className='pokemon__body-desc'>Height: <span>{pokemon.height}</span></p>\n                    </div>\n                    <div className='pokemon__body  mt-2 info-division'>\n                        {pokemon.types.map((types,i) => {\n                            return (\n                                <p key={i+pokemon.name + pokemon.id} className='pokemon__types'>\n                                    {types.type.name.charAt(0).toUpperCase() + types.type.name.slice(1)}\n                                </p>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const PokemonNotFound = () => {\n    return (\n        <div className='animate__animated animate__fadeIn container pokemonerror__container mt-5'>\n            <p>The Pokemon you are looking for, doesn't exist.</p>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { searchPokemon } from '../../helpers/fetch'\nimport { LoadingScreen } from '../PokeGrid/LoadingScreen';\nimport { PokeInfo } from './PokeInfo';\nimport { PokemonNotFound } from './PokemonNotFound';\n\nexport const Pokemon = ({ pokeName, setSearching }) => {\n\n\n    const [pokemon, setPokemon] = useState({\n        found: false,\n        loading: true\n    });\n\n    useEffect(() => {\n        setPokemon({\n            found: false,\n            loading: true\n        });\n\n        const poke = async () => {\n            const data = await searchPokemon(pokeName);\n            if (data) {\n                setPokemon({\n                    ...data,\n                    found: true,\n                    loading: false\n                });\n            } else {\n                setPokemon({\n                    found: false,\n                    loading: false\n                });\n            }\n        }\n\n        poke();\n    }, [pokeName]);\n\n    if (pokemon.loading) {\n        return <LoadingScreen />\n    }\n\n    return (\n        <div>\n            {\n                pokemon.found\n                    ? <PokeInfo\n                        pokemon={pokemon}\n                    />\n                    : <PokemonNotFound />\n            }\n\n            <button\n                className=' mt-5 btn back-btn'\n                onClick={() => {\n                    setSearching(prevVal => !prevVal);\n                }}\n            >\n                Go Back\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useForm } from '../../hooks/useForm'\n\nexport const Searchbar = (\n    {\n        setSearching,\n        setPokemon,\n    }\n) => {\n\n    const [inputValue, handleInputChange] = useForm({\n        pokeName: ''\n    });\n\n    const { pokeName } = inputValue;\n\n    return (\n        <div className='searchbar__container mt-5'>\n            <div>\n                <input\n                    className='searchbar__input'\n                    name='pokeName'\n                    type='text'\n                    placeholder='Pikachu...'\n                    value={pokeName}\n                    onChange={handleInputChange}\n                />\n                <button\n                    className='btn'\n                    onClick={() => {\n                        setPokemon(pokeName);\n                        setSearching(true);\n                    }}\n                >\n                    <i className=\"fas fa-search\"></i>\n                </button>\n            </div>\n        </div>\n    )\n}\n","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n\n    const [state, setState] = useState(initialState);\n\n    const handleInputChange = ({ target }) => {\n        setState({\n            ...state,\n            [ target.name ]: target.value\n        });\n    }\n\n    return [state, handleInputChange];\n\n}\n","import React, { useState } from 'react';\n\nimport { Navbar } from './components/Navbar/Navbar';\nimport { Pokedex } from './components/Pokedex/Pokedex';\nimport { Pokemon } from './components/Pokemon/Pokemon';\nimport { Searchbar } from './components/Searchbar/Searchbar';\n\nexport const App = () => {\n\n    const [searching, setSearching] = useState(false);\n    const [pokemon, setPokemon] = useState('');\n\n    return (\n        <div>\n            <Navbar />\n            <Searchbar\n                setSearching={setSearching}\n                searching={searching}\n                setPokemon={setPokemon}\n            />\n            {\n                searching\n                    ? <Pokemon\n                        pokeName={pokemon}\n                        setSearching={setSearching}\n                    />\n                    : <Pokedex />\n            }\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './styles/styles.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}